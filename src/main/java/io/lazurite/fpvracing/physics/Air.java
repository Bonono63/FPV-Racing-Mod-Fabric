package io.lazurite.fpvracing.physics;

import io.lazurite.fpvracing.client.ClientInitializer;
import io.lazurite.fpvracing.util.math.VectorHelper;
import net.minecraft.util.math.Vec3d;

import javax.vecmath.Vector3f;
import java.util.Random;

/**
 * Methods related to air and air resistance.
 * @author Ethan Johnson
 */
public class Air {
    /**
     * Simple math to calculate the amount of force generated by air resistance.
     * @return a {@link Vector3f} containing the direction and amount of force (in newtons)
     */
    public static Vector3f getResistanceForce(Vector3f direction, int size, float dragCoefficient) {
        // TODO Get size based on model shape in direction of movement (ask peyon)

        Vec3d velocity = VectorHelper.vector3fToVec3d(direction);
        float k = (ClientInitializer.physicsWorld.getAirDensity() * dragCoefficient * (float) Math.pow(size / 16f, 2)) / 2.0f;

        Vec3d airVec3d = velocity.multiply(k).multiply(velocity.lengthSquared()).negate();
        return VectorHelper.vec3dToVector3f(airVec3d);
    }

    public static Vector3f getRandomWindVector() {
        Random random = new Random();
        Vector3f out = new Vector3f();

        return out;
    }
}
